name: CD - Deploy Backend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_USER: somu
          POSTGRES_PASSWORD: password
          POSTGRES_DB: somuuat
        ports:
          - 5332:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Slack commit message and sha to get Notify for all commits
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":party-github: https://github.com/somusaxena20/spring-boot-full-stack/commit/${{ github.sha }} - ${{ github.event.head_commit.message }} "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":among-us-party: Deployment started :bitbucket-progress: :x-fingers:"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Discord Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":party-github: https://github.com/somusaxena20/spring-boot-full-stack/commit/${{ github.sha }} - ${{ github.event.head_commit.message }} "}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":party-github: Started Workflow :completed:"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(TZ=Asia/Kolkata date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message OF MAVEN BUILD
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":":maven: Building with Maven :maven:"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Discord Message OF MAVEN BUILD
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":maven: Building with Maven :maven:"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - uses: actions/checkout@v3

      - name: Send Discord Message Docker Image Push
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":partydocker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/somusaxena20/somu-api"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Slack Message Docker Image Push
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":":partydocker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/somusaxena20/somu-api"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json  api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat  Dockerrun.aws.json
          sed -i -E 's_(somusaxena20/somu-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json
          
      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":":aws: Starting deployment to Elastic Beanstalk :progress_bar:"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Discord Message Of Elastic bean
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":aws: Starting deployment to Elastic Beanstalk :progress_bar:"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":":aws: Completed deployment to Elastic Beanstalk :done:"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Discord Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":aws: Completed deployment to Elastic Beanstalk :done:"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
#          git add .
#          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
#          git push

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":":party-github: Completed Workflow :completed:"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Discord Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"content": ":party-github: Completed Workflow :completed:"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}